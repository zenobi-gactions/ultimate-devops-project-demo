# CI for Product Catalog Service

name: product-catalog-ci

on: 
    push:
        branches:
        - main
        paths-ignore:
        - 'kubernetes/productcatalog/deploy.yaml'
    # pull_request:
    #     branches:
    #     - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
            go-version: 1.22
        
        - name: Build
          run: |
            cd src/product-catalog
            go mod download
            go build -o product-catalog-service main.go

        - name: unit tests
          run: |
            cd src/product-catalog
            go test ./...
    
    code-quality:
        runs-on: ubuntu-latest

        steps:
        - name: checkout code
          uses: actions/checkout@v4
        
        - name: Setup Go 1.22
          uses: actions/setup-go@v2
          with:
           go-version: 1.22
        
        - name: Run golangci-lint
          uses: golangci/golangci-lint-action@v6
          with:
            version: v1.55.2
            working-directory: src/product-catalog
            # args: --timeout=5m

    docker:
        runs-on: ubuntu-latest

        needs: build

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Install Docker
          uses: docker/setup-buildx-action@v1
        
        - name: Login to Docker
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            
        - name: Shorten commit id
          shell: bash
          run: |
            echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"

        - name: Docker Push
          uses: docker/build-push-action@v6
          with:
            context: src/product-catalog
            file: src/product-catalog/Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/product-catalog:${{ env.COMMIT_ID }} 
        outputs:
          commit_id: ${{ env.COMMIT_ID }}

    
    updatek8s:
        runs-on: ubuntu-latest

        needs: docker

        steps:
        - name: checkout code
          uses: actions/checkout@v4
          with:
            # token: ${{ secrets.GITHUB_TOKEN }}
            token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

        - name: Shorten commit id
          shell: bash
          run: |
            echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"


        - name: Update tag in kubernetes deployment manifest
          run: | 
               sed -i "s|image: .*/product-catalog:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/product-catalog:${{ env.COMMIT_ID }}|" kubernetes/productcatalog/deploy.yaml
        
        # - name: Commit and push changes
        #   run: |
        #     git config --global user.email "andynze4@gmail.com"
        #     git config --global user.name "Andy Nzeka"
        #     git add kubernetes/productcatalog/deploy.yaml
        #     git commit -m "[CI]: Update product catalog image tag"
        #     git push origin HEAD:main -f

        - name: Commit and push changes
          run: |
            git config --global user.email "andynze4@gmail.com"
            git config --global user.name "Andy Nzeka"
            git pull origin main --rebase || true  
            git add kubernetes/productcatalog/deploy.yaml
            git commit -m "[CI]: Update product catalog image tag" || echo "No changes to commit"
            git push origin main
    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            fetch-depth: 0

        - name: Install ArgoCD CLI
          shell: bash
          run: |
            curl -ksSL -o /tmp/argocd http://k8s-argocd-fcd9021302-1197223614.us-east-1.elb.amazonaws.com/argocd/download/argocd-linux-arm64 
            chmod +x /tmp/argocd
            sudo mv /tmp/argocd /usr/local/bin/argocd
            echo "✅ ArgoCD CLI installed successfully."

        - name: Login to ArgoCD
          shell: bash
          run: |
            argocd login k8s-argocd-fcd9021302-1197223614.us-east-1.elb.amazonaws.com --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
            echo "✅ Logged in to ArgoCD successfully."
        - name: Sync Application
          shell: bash
          run: |
            argocd app sync product-catalog --grpc-web
            echo "✅ ArgoCD Application synced successfully."